{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      output = _useState4[0],\n      onChangeOutput = _useState4[1];\n\n  var displayDef = function displayDef() {\n    var originalCase = input.replace(/ +/g, \" \").trim();\n    var words = originalCase.split(\" \");\n    var results = [];\n\n    var _loop = function _loop(i) {\n      try {\n        var word = words[i].toUpperCase();\n        fetch(\"./merged.json\").then(function (result) {\n          return result.json();\n        }).then(function (data) {\n          return results.push(words[i] + \": \" + data[word][\"MEANINGS\"][0][1] + \".\\n\");\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    for (var i = 0; i < words.length; i++) {\n      _loop(i);\n    }\n\n    console.log(results);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(Text, {\n          children: \"Define words\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeInput,\n          value: input,\n          style: styles.inputs,\n          placeholder: \"Insert your text here:\",\n          multiline: true\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: displayDef,\n          style: styles.btn,\n          children: \"Check\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeOutput,\n          value: output,\n          style: styles.inputs,\n          placeholder: \"The result will show here:\",\n          disabled: true\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputs: {\n    padding: 20,\n    border: \"1px solid black\",\n    height: \"100%\",\n    width: \"90%\"\n  },\n  btn: {\n    padding: 10,\n    backgroundColor: \"#000000\",\n    color: \"#ffffff\"\n  }\n});","map":{"version":3,"names":["StatusBar","useState","App","input","onChangeInput","output","onChangeOutput","displayDef","originalCase","replace","trim","words","split","results","i","word","toUpperCase","fetch","then","result","json","data","push","error","console","log","length","styles","container","flex","inputs","btn","StyleSheet","create","backgroundColor","alignItems","justifyContent","padding","border","height","width","color"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, TouchableOpacity } from 'react-native-web';\n// window.addEventListener(\"load\",()=>{\n//   let btn,input, output;\n//   btn = document.getElementById(\"check\");\n//   output = document.getElementById(\"output\");\n//   input = document.getElementById(\"input\");\n \n  \n//   btn.addEventListener(\"click\",()=>{\n//       let originalCase= (input.value).replace(/ +/g,\" \").trim();\n//       let words = originalCase.split(\" \"); //input to upper case\n//       let results = [];\n//       for (let i=0;i<words.length;i++){\n//           try {\n//               let word = (words[i]).toUpperCase();\n//               fetch(\"./merged.json\")\n//               .then(result => result.json())\n//               .then(data=>results.push(words[i] + \": \" + data[word][\"MEANINGS\"][0][1] + \".\\n\"))\n//           } catch (error) {\n//               console.log(error); \n//           }\n          \n//       }\n//       // console.log(results[\"0\"])\n//       console.log(results) ;\n//       output.innerHTML=results;\n      \n//   })\n// })\nexport default function App() {\n  const [input,onChangeInput] = useState();\n  const [output,onChangeOutput] = useState();\n  const displayDef = ()=>{\n    let originalCase= input.replace(/ +/g,\" \").trim();\n      let words = originalCase.split(\" \"); //input to upper case\n      let results = [];\n      for (let i=0;i<words.length;i++){\n          try {\n              let word = (words[i]).toUpperCase();\n              fetch(\"./merged.json\")\n              .then(result => result.json())\n              .then(data=>results.push(words[i] + \": \" + data[word][\"MEANINGS\"][0][1] + \".\\n\"))\n          } catch (error) {\n              console.log(error); \n          }\n          \n      }\n      console.log(results);\n  }\n  return (\n    <>\n    <View style={styles.container}>\n      <View style={{flex:1}}>\n        <Text>Define words</Text>\n      </View>\n      <View style={{flex:1}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} style={styles.inputs} placeholder={\"Insert your text here:\"} multiline={true} />\n      </View>\n      <View style={{flex:1}}>\n        <TouchableOpacity onPress={displayDef} style={styles.btn}>Check</TouchableOpacity>\n      </View>\n      <View style={{flex:1}}>\n        <TextInput onChangeText ={onChangeOutput} value = {output} style={styles.inputs} placeholder={\"The result will show here:\"} disabled/>\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputs:{\n    padding:20,\n    border:\"1px solid black\",\n    height:\"100%\",\n    width:\"90%\"\n  },\n  btn:{\n    padding:10,\n    backgroundColor:\"#000000\",\n    color:\"#ffffff\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}