{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar json = require(\"./merged.json\");\n\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      output = _useState4[0],\n      onChangeOutput = _useState4[1];\n\n  var displayDef = function displayDef() {\n    var originalCase = input.replace(/ +/g, \" \").trim();\n    var words = originalCase.split(\" \");\n    var results = [];\n\n    for (var i = 0; i < words.length; i++) {\n      try {\n        var word = words[i].toUpperCase();\n        results.push(words[i] + \": \" + json[word][\"MEANINGS\"][0][1] + \".\\n\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    onChangeOutput(results);\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 0.5\n        },\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Define words\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeInput,\n          value: input,\n          style: styles.inputs,\n          placeholder: \"Insert your text here:\",\n          multiline: true,\n          numberOfLines: 5\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 0.5\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: displayDef,\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Check\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeOutput,\n          value: output,\n          style: styles.inputs,\n          placeholder: \"The result will show here:\",\n          multiline: true,\n          numberOfLines: 5,\n          disabled: true\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#393E46'\n  },\n  title: {\n    color: \"#F6F6F6\",\n    fontSize: 20\n  },\n  inputs: {\n    padding: 20,\n    height: \"100%\",\n    width: \"99%\",\n    color: \"#222831\",\n    backgroundColor: \"#32E0C4\",\n    opacity: 0.5\n  },\n  btn: {\n    padding: 10,\n    backgroundColor: \"#393E46\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","useState","json","require","App","input","onChangeInput","output","onChangeOutput","displayDef","originalCase","replace","trim","words","split","results","i","length","word","toUpperCase","push","error","console","log","styles","container","flex","title","inputs","btn","color","StyleSheet","create","backgroundColor","fontSize","padding","height","width","opacity","textAlign"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View,SafeAreaView } from 'react-native';\nimport { TextInput, TouchableOpacity } from 'react-native-web';\nconst json = require(\"./merged.json\");\n// window.addEventListener(\"load\",()=>{\n//   let btn,input, output;\n//   btn = document.getElementById(\"check\");\n//   output = document.getElementById(\"output\");\n//   input = document.getElementById(\"input\");\n \n  \n//   btn.addEventListener(\"click\",()=>{\n//       let originalCase= (input.value).replace(/ +/g,\" \").trim();\n//       let words = originalCase.split(\" \"); //input to upper case\n//       let results = [];\n//       for (let i=0;i<words.length;i++){\n//           try {\n//               let word = (words[i]).toUpperCase();\n//               fetch(\"./merged.json\")\n//               .then(result => result.json())\n//               .then(data=>results.push(words[i] + \": \" + data[word][\"MEANINGS\"][0][1] + \".\\n\"))\n//           } catch (error) {\n//               console.log(error); \n//           }\n          \n//       }\n//       // console.log(results[\"0\"])\n//       console.log(results) ;\n//       output.innerHTML=results;\n      \n//   })\n// })\nexport default function App() {\n  const [input,onChangeInput] = useState(\"\");\n  const [output,onChangeOutput] = useState(\"\");\n  const displayDef = ()=>{\n      let originalCase= input.replace(/ +/g,\" \").trim();\n      let words = originalCase.split(\" \"); //input to upper case\n      let results = [];\n      for (let i=0;i<words.length;i++){\n          try {\n              let word = (words[i]).toUpperCase();\n              results.push(words[i] + \": \" + json[word][\"MEANINGS\"][0][1] + \".\\n\")\n          } catch (error) {\n              console.log(error); \n          }\n          \n      }\n      onChangeOutput(results);\n  }\n  return (\n    <SafeAreaView>\n    <View style={styles.container}>\n      <View style={{flex:0.5}}>\n        <Text style={styles.title}>Define words</Text>\n      </View>\n\n      <View style={{flex:1}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} style={styles.inputs} placeholder={\"Insert your text here:\"} multiline={true} numberOfLines = {5}/>\n      </View>\n\n      <View style={{flex:0.5}}>\n        <TouchableOpacity onPress={displayDef} style={styles.btn}><Text style={{color:\"#ffffff\"}}>Check</Text></TouchableOpacity>\n      </View>\n\n      <View style={{flex:1}}>\n        <TextInput onChangeText ={onChangeOutput} value = {output} style={styles.inputs} placeholder={\"The result will show here:\"} multiline={true} numberOfLines = {5} disabled/>\n      </View>\n\n    </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#393E46',\n    \n  },\n  title:{\n    color:\"#F6F6F6\",\n    fontSize:20\n  },\n  inputs:{\n    padding:20,\n    height:\"100%\",\n    width:\"99%\",\n    color:\"#222831\",\n    backgroundColor:\"#32E0C4\",\n    opacity:0.5\n  },\n  btn:{\n    padding:10,\n    backgroundColor:\"#393E46\",\n    textAlign:\"center\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}