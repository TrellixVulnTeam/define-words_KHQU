{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Text, {\n        children: \"Define words\"\n      })\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(TextInput, {\n        onChangeText: onChangeInput,\n        value: input\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","App","input","onChangeInput","styles","container","flex","StyleSheet","create","backgroundColor","alignItems","justifyContent"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput } from 'react-native-web';\n// window.addEventListener(\"load\",()=>{\n//   let btn,input, output;\n//   btn = document.getElementById(\"check\");\n//   output = document.getElementById(\"output\");\n//   input = document.getElementById(\"input\");\n \n  \n//   btn.addEventListener(\"click\",()=>{\n//       let originalCase= (input.value).replace(/ +/g,\" \").trim();\n//       let words = originalCase.split(\" \"); //input to upper case\n//       let results = [];\n//       for (let i=0;i<words.length;i++){\n//           try {\n//               let word = (words[i]).toUpperCase();\n//               fetch(\"./merged.json\")\n//               .then(result => result.json())\n//               .then(data=>results.push(words[i] + \": \" + data[word][\"MEANINGS\"][0][1] + \".\\n\"))\n//           } catch (error) {\n//               console.log(error); \n//           }\n          \n//       }\n//       // console.log(results[\"0\"])\n//       console.log(results) ;\n//       output.innerHTML=results;\n      \n//   })\n// })\nexport default function App() {\n  const [input,onChangeInput] = useState();\n  return (\n    <View style={styles.container}>\n      <View style={{flex:1}}>\n        <Text>Define words</Text>\n      </View>\n      <View style={{flex:1}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} />\n      </View>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;;;;AA+BA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA8BD,QAAQ,EAAtC;EAAA;EAAA,IAAOE,KAAP;EAAA,IAAaC,aAAb;;EACA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAE;QAACC,IAAI,EAAC;MAAN,CAAb;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EADF,EAIE,KAAC,IAAD;MAAM,KAAK,EAAE;QAACA,IAAI,EAAC;MAAN,CAAb;MAAA,UACE,KAAC,SAAD;QAAW,YAAY,EAAGH,aAA1B;QAAyC,KAAK,EAAID;MAAlD;IADF,EAJF,EAOE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAPF;EAAA,EADF;AAWD;AAED,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETG,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}