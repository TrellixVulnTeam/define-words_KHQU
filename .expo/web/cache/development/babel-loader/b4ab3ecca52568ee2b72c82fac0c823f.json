{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar json = require(\"./merged.json\");\n\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      output = _useState4[0],\n      onChangeOutput = _useState4[1];\n\n  var displayDef = function displayDef() {\n    var originalCase = input.replace(/ +/g, \" \").trim();\n    var words = originalCase.split(\" \");\n    var results = [];\n\n    for (var i = 0; i < words.length; i++) {\n      try {\n        var word = words[i].toUpperCase();\n        var meanings = json[word][\"MEANINGS\"][0] ? json[word][\"MEANINGS\"][0] + \" \" + json[word][\"MEANINGS\"][1] : \"No definition\";\n        var synonyms = json[word][\"SYNONYMS\"][0] ? \"Synonym: \" + json[word][\"SYNONYMS\"][0] : \"\";\n        var antonyms = json[word][\"ANTONYMS\"][0] ? \", Antonym: \" + json[word][\"ANTONYMS\"] : \"\";\n        console.log(output + \"ds\");\n        onChangeOutput(_jsxs(Text, {\n          children: [\"`\\u2022 $\", words[i], \": $\", meanings, \"($\", synonyms, \"$\", antonyms, \".)`\"]\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 0.5\n        },\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Define words\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeInput,\n          value: input,\n          style: styles.inputs,\n          placeholder: \"Insert your text here:\",\n          multiline: true,\n          numberOfLines: 20\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 0.3\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: displayDef,\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Check\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(Text, {\n          onChangeText: onChangeOutput,\n          style: styles.inputs,\n          children: output\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff'\n  },\n  title: {\n    padding: 30,\n    color: \"#3A6B35\",\n    fontSize: 40\n  },\n  inputs: {\n    padding: 30,\n    height: \"100%\",\n    width: \"99%\",\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    fontSize: 15,\n    border: \"0.2px solid #3A6B35\"\n  },\n  btn: {\n    padding: 10,\n    backgroundColor: \"#3A6B35\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"99%\"\n  }\n});","map":{"version":3,"names":["StatusBar","useState","json","require","App","input","onChangeInput","output","onChangeOutput","displayDef","originalCase","replace","trim","words","split","results","i","length","word","toUpperCase","meanings","synonyms","antonyms","console","log","error","styles","container","flex","title","inputs","btn","color","StyleSheet","create","backgroundColor","padding","fontSize","height","width","border","textAlign","justifyContent"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View,SafeAreaView } from 'react-native';\nimport { TextInput, TouchableOpacity } from 'react-native-web';\nconst json = require(\"./merged.json\");\n\nexport default function App() {\n  const [input,onChangeInput] = useState(\"\");\n  const [output,onChangeOutput] = useState(\"\");\n  const displayDef = ()=>{\n      let originalCase= input.replace(/ +/g,\" \").trim();\n      let words = originalCase.split(\" \"); //input to upper case\n      let results = [];\n      for (let i=0;i<words.length;i++){\n          try {\n              let word = (words[i]).toUpperCase();\n              let meanings = json[word][\"MEANINGS\"][0]?`${json[word][\"MEANINGS\"][0]} ${json[word][\"MEANINGS\"][1]}`:\"No definition\";\n              let synonyms = json[word][\"SYNONYMS\"][0]?`Synonym: ${json[word][\"SYNONYMS\"][0]}`:\"\";\n              let antonyms = json[word][\"ANTONYMS\"][0]?`, Antonym: ${json[word][\"ANTONYMS\"]}`:\"\";\n              // results.push(`• ${words[i]}: ${meanings}(${synonyms}${antonyms}.)`)\n              console.log(output +\"ds\"); \n              onChangeOutput(<Text>`• ${words[i]}: ${meanings}(${synonyms}${antonyms}.)`</Text>)\n          } catch (error) {\n              console.log(error); \n          }\n          \n      }\n      \n      // onChangeOutput(results.join(\"\\n\\n\")); \n  }\n  return (\n    <SafeAreaView>\n    <View style={styles.container}>\n      <View style={{flex:0.5}}>\n        <Text style={styles.title}>Define words</Text>\n      </View>\n\n      <View style={{flex:2}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} style={styles.inputs} placeholder={\"Insert your text here:\"} multiline={true} numberOfLines = {20}/>\n      </View>\n\n      <View style={{flex:0.3}}>\n        <TouchableOpacity onPress={displayDef} style={styles.btn}><Text style={{color:\"#ffffff\"}}>Check</Text></TouchableOpacity>\n      </View>\n\n      <View style={{flex:2}}>\n        <Text onChangeText={onChangeOutput} style={styles.inputs}>{output}</Text>\n      </View>\n\n    </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff',\n    \n  },\n  title:{\n    padding:30,\n    color:\"#3A6B35\",\n    fontSize:40\n  },\n  inputs:{\n    padding:30,\n    height:\"100%\",\n    width:\"99%\",\n    color:\"#000000\",\n    backgroundColor:\"#ffffff\",\n    fontSize:15,\n    border:\"0.2px solid #3A6B35\"\n    // opacity:0.5\n  },\n  btn:{\n    padding:10,\n    backgroundColor:\"#3A6B35\",\n    textAlign:\"center\",\n    justifyContent:\"center\",\n    height:\"100%\",\n    width:\"99%\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}