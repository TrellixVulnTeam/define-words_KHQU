{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar dict = require(\"./dictionary_minimal.json\");\n\nvar ipa = require(\"./en_US.json\");\n\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      output = _useState4[0],\n      setOutput = _useState4[1];\n\n  var results = [];\n\n  var displayDef = function displayDef() {\n    setOutput(\"\");\n    var originalCase = input.replace(/ +/g, \" \").trim();\n    originalCase = originalCase.replace(/,/g, '');\n    originalCase = originalCase.replace(/\\./g, '');\n    var words = originalCase.split(\" \");\n    console.log(words);\n\n    var _loop = function _loop(i) {\n      try {\n        var word, wordIpa, meaning;\n        word = words[i].toLowerCase();\n        wordIpa = \"\";\n        meaning = dict[word] ? \" \" + dict[word] : \"No definition\";\n\n        if (ipa[\"en_US\"][0][word]) {\n          wordIpa = ipa[\"en_US\"][0][word];\n        }\n\n        console.log(wordIpa);\n        setOutput(function (output) {\n          return [].concat(_toConsumableArray(output), [_jsxs(Text, {\n            children: [_jsxs(\"strong\", {\n              style: {\n                fontSize: 18\n              },\n              children: [words[i], \" \"]\n            }), _jsx(\"p\", {\n              style: {\n                fontSize: 18\n              },\n              children: wordIpa\n            }), meaning + \".\\n\\n\"]\n          }, i)]);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    for (var i = 0; i < words.length; i++) {\n      _loop(i);\n    }\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 0.5\n        },\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Define words\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeInput,\n          value: input,\n          style: styles.inputs,\n          placeholder: \"Insert your text here:\",\n          multiline: true,\n          numberOfLines: 20\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 0.3\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: displayDef,\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Check\"\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          onChangeText: setOutput,\n          style: styles.inputs,\n          children: output\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff'\n  },\n  title: {\n    padding: 30,\n    color: \"#3A6B35\",\n    fontSize: 40\n  },\n  inputs: {\n    padding: 30,\n    height: \"100%\",\n    width: \"99%\",\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    fontSize: 15,\n    border: \"0.2px solid #3A6B35\"\n  },\n  btn: {\n    padding: 10,\n    backgroundColor: \"#3A6B35\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"99%\"\n  }\n});","map":{"version":3,"names":["useState","dict","require","ipa","App","input","onChangeInput","output","setOutput","results","displayDef","originalCase","replace","trim","words","split","console","log","i","word","wordIpa","meaning","toLowerCase","fontSize","error","length","styles","container","flex","title","inputs","btn","color","StyleSheet","create","backgroundColor","padding","height","width","border","textAlign","justifyContent"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { StyleSheet, Text, View,SafeAreaView } from 'react-native';\nimport { TextInput, TouchableOpacity } from 'react-native-web';\nconst dict = require(\"./dictionary_minimal.json\");\nconst ipa = require(\"./en_US.json\");\nexport default function App() {\n  \n  const [input,onChangeInput] = useState(\"\");\n  const [output,setOutput] = useState([]);\n  let results = [];\n  const displayDef = ()=>{\n    setOutput(\"\");\n      let originalCase= input.replace(/ +/g,\" \").trim();\n      originalCase = originalCase.replace(/,/g, '');//remve commas\n      originalCase = originalCase.replace(/\\./g, '');//remve dots\n      let words = originalCase.split(\" \"); //input to upper case\n      console.log(words);\n      for (let i=0;i<words.length;i++){\n          try {\n              let word,wordIpa,meaning;\n              word = (words[i]).toLowerCase()\n              wordIpa=\"\";\n              meaning =  dict[word]?` ${dict[word]}`:\"No definition\";\n              \n              if(ipa[\"en_US\"][0][word]){\n                  wordIpa=ipa[\"en_US\"][0][word]\n              }\n              console.log(wordIpa)\n              \n              setOutput(output=> [...output,<Text key={i}>{<strong style={{fontSize:18}}>{words[i]} </strong> }{<p style={{fontSize:18}}>{wordIpa}</p>}{`${meaning}.\\n\\n`}</Text>])\n                        \n          } catch (error) {\n              console.log(error); \n          }\n      }\n  }\n \n  \n  return (\n    <SafeAreaView>\n    <View style={styles.container}>\n      <View style={{flex:0.5}}>\n        <Text style={styles.title}>Define words</Text>\n      </View>\n\n      <View style={{flex:2}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} style={styles.inputs} placeholder={\"Insert your text here:\"} multiline={true} numberOfLines = {20}/>\n      </View>\n\n      <View style={{flex:0.3}}>\n        <TouchableOpacity onPress={displayDef} style={styles.btn}><Text style={{color:\"#ffffff\"}}>Check</Text></TouchableOpacity>\n      </View>\n\n      <View>\n        <Text onChangeText={setOutput} style={styles.inputs}>\n          {output}\n        </Text>\n      </View>\n\n    </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff',\n    \n  },\n  title:{\n    padding:30,\n    color:\"#3A6B35\",\n    fontSize:40\n  },\n  inputs:{\n    padding:30,\n    height:\"100%\",\n    width:\"99%\",\n    color:\"#000000\",\n    backgroundColor:\"#ffffff\",\n    fontSize:15,\n    border:\"0.2px solid #3A6B35\"\n    // opacity:0.5\n  },\n  btn:{\n    padding:10,\n    backgroundColor:\"#3A6B35\",\n    textAlign:\"center\",\n    justifyContent:\"center\",\n    height:\"100%\",\n    width:\"99%\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}