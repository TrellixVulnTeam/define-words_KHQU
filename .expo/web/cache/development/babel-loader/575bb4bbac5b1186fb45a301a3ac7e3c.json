{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar dict = require(\"./merged.json\");\n\nvar ipa = require(\"./en_US.json\");\n\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      onChangeInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      output = _useState4[0],\n      setOutput = _useState4[1];\n\n  var results = [];\n\n  var displayDef = function displayDef() {\n    var originalCase = input.replace(/ +/g, \" \").trim();\n    var words = originalCase.split(\" \");\n\n    var _loop = function _loop(i) {\n      try {\n        var word = words[i].toUpperCase();\n        var wordIpa;\n        var wordType = dict[word][\"MEANINGS\"][0][0];\n        var meanings = wordType ? \" \" + dict[word][\"MEANINGS\"][0][1] : \"No definition\";\n        var synonyms = dict[word][\"SYNONYMS\"][0] ? \"Synonym: \" + dict[word][\"SYNONYMS\"][0] : \"\";\n        var antonyms = dict[word][\"ANTONYMS\"][0] ? \", Antonym: \" + dict[word][\"ANTONYMS\"] : \"\";\n\n        if (ipa[\"en_US\"][0][word[i]]) {\n          wordIpa = ipa[word[i]];\n        }\n\n        setOutput(function (output) {\n          return [].concat(_toConsumableArray(output), [_jsxs(Text, {\n            children: [_jsxs(\"b\", {\n              style: {\n                fontSize: 18\n              },\n              children: [words[i], \" \"]\n            }), \" \", _jsx(\"br\", {}), wordIpa, _jsx(\"br\", {}), _jsxs(\"i\", {\n              style: {\n                fontSize: 16\n              },\n              children: [wordType, \" \"]\n            }), \":\" + meanings + \"(\" + synonyms + antonyms + \".) \\n\"]\n          }, i)]);\n        });\n      } catch (error) {}\n    };\n\n    for (var i = 0; i < words.length; i++) {\n      _loop(i);\n    }\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: {\n          flex: 0.5\n        },\n        children: _jsx(Text, {\n          style: styles.title,\n          children: \"Define words\"\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(TextInput, {\n          onChangeText: onChangeInput,\n          value: input,\n          style: styles.inputs,\n          placeholder: \"Insert your text here:\",\n          multiline: true,\n          numberOfLines: 20\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 0.3\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: displayDef,\n          style: styles.btn,\n          children: _jsx(Text, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Check\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 2\n        },\n        children: _jsx(Text, {\n          onChangeText: setOutput,\n          style: styles.inputs,\n          children: output\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff'\n  },\n  title: {\n    padding: 30,\n    color: \"#3A6B35\",\n    fontSize: 40\n  },\n  inputs: {\n    padding: 30,\n    height: \"100%\",\n    width: \"99%\",\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    fontSize: 15,\n    border: \"0.2px solid #3A6B35\"\n  },\n  btn: {\n    padding: 10,\n    backgroundColor: \"#3A6B35\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"99%\"\n  }\n});","map":{"version":3,"names":["StatusBar","useState","dict","require","ipa","App","input","onChangeInput","output","setOutput","results","displayDef","originalCase","replace","trim","words","split","i","word","toUpperCase","wordIpa","wordType","meanings","synonyms","antonyms","fontSize","error","length","styles","container","flex","title","inputs","btn","color","StyleSheet","create","backgroundColor","padding","height","width","border","textAlign","justifyContent"],"sources":["/home/looper/Desktop/dict-tool/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View,SafeAreaView } from 'react-native';\nimport { TextInput, TouchableOpacity } from 'react-native-web';\nconst dict = require(\"./merged.json\");\nconst ipa = require(\"./en_US.json\");\nexport default function App() {\n  \n  const [input,onChangeInput] = useState(\"\");\n  const [output,setOutput] = useState([]);\n  let results = [];\n  const displayDef = ()=>{\n      let originalCase= input.replace(/ +/g,\" \").trim();\n      let words = originalCase.split(\" \"); //input to upper case\n      \n      for (let i=0;i<words.length;i++){\n          try {\n              let word = (words[i]).toUpperCase();\n              let wordIpa;\n              let wordType = dict[word][\"MEANINGS\"][0][0];\n              let meanings = wordType?` ${dict[word][\"MEANINGS\"][0][1]}`:\"No definition\";\n              let synonyms = dict[word][\"SYNONYMS\"][0]?`Synonym: ${dict[word][\"SYNONYMS\"][0]}`:\"\";\n              let antonyms = dict[word][\"ANTONYMS\"][0]?`, Antonym: ${dict[word][\"ANTONYMS\"]}`:\"\";\n              \n              if(ipa[\"en_US\"][0][word[i]]){\n                  wordIpa=ipa[word[i]]\n              }\n              \n              setOutput(output=> [...output,<Text key={i}>{<b style={{fontSize:18}}>{words[i]} </b>} {<br></br>}{wordIpa}{<br></br>}{<i style={{fontSize:16}}>{wordType} </i>}{`:${meanings}(${synonyms}${antonyms}.) \\n`}</Text>])\n              // setOutput(output => [...output,`• ${words[i]}: ${meanings}(${synonyms}${antonyms}.)`])\n              // setOutput(output => [...output,`• ${words[i]}: ${meanings}(${synonyms}${antonyms}.)`])\n              // results.push(<Text key={i}>• <b>{words[i]}</b>: {meanings}({synonyms}{antonyms})</Text>)\n              \n          } catch (error) {\n              // console.log(error); \n          }\n      }\n  }\n  // const listDefini = output.map((item) =>{\n  //   return <Text key={item}>{<b>item</b>}</Text>\n  // }\n\n  // )\n  \n  return (\n    <SafeAreaView>\n    <View style={styles.container}>\n      <View style={{flex:0.5}}>\n        <Text style={styles.title}>Define words</Text>\n      </View>\n\n      <View style={{flex:2}}>\n        <TextInput onChangeText ={onChangeInput} value = {input} style={styles.inputs} placeholder={\"Insert your text here:\"} multiline={true} numberOfLines = {20}/>\n      </View>\n\n      <View style={{flex:0.3}}>\n        <TouchableOpacity onPress={displayDef} style={styles.btn}><Text style={{color:\"#ffffff\"}}>Check</Text></TouchableOpacity>\n      </View>\n\n      <View style={{flex:2}}>\n        <Text onChangeText={setOutput} style={styles.inputs}>\n          {output}\n        </Text>\n      </View>\n\n    </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#ffffff',\n    \n  },\n  title:{\n    padding:30,\n    color:\"#3A6B35\",\n    fontSize:40\n  },\n  inputs:{\n    padding:30,\n    height:\"100%\",\n    width:\"99%\",\n    color:\"#000000\",\n    backgroundColor:\"#ffffff\",\n    fontSize:15,\n    border:\"0.2px solid #3A6B35\"\n    // opacity:0.5\n  },\n  btn:{\n    padding:10,\n    backgroundColor:\"#3A6B35\",\n    textAlign:\"center\",\n    justifyContent:\"center\",\n    height:\"100%\",\n    width:\"99%\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}